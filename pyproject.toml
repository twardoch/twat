[build-system]
requires = [
    "hatchling>=1.21.0",
    "hatch-vcs>=0.3.0",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/twat"]


[project]
name = "twat"
dynamic = ["version"]
description = "Python package management and plugin system"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["package", "plugin", "management", "development"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
    "importlib-metadata>=6.0.0",
    "importlib-resources>=5.0.0",
    "fire>=0.5.0",
    "rich>=13.7.0",
    "pydantic>=2.0.0",
    "tomli>=2.0.0; python_version < '3.11'",
    "typing-extensions>=4.0.0; python_version < '3.10'",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
cache = [
    "twat-cache>=0.1.0",
    "platformdirs>=3.0.0",
    "diskcache>=5.0.0",
    "joblib>=1.3.0",
]
multi = [
    "twat-multi>=0.1.0",
    "pathos>=0.3.0",
]
pipeline = [
    "twat-pipeline>=0.1.0",
    "prefect>=2.14.0",
    "pydantic>=2.0.0",
]
all = [
    "twat-cache>=0.1.0",
    "twat-multi>=0.1.0",
    "twat-pipeline>=0.1.0",
    "platformdirs>=3.0.0",
    "diskcache>=5.0.0",
    "joblib>=1.3.0",
    "pathos>=0.3.0",
    "prefect>=2.14.0",
]


[[project.authors]]
name = "Adam Twardoch"
email = "adam+github@twardoch.com"


[project.urls]
Documentation = "https://github.com/twardoch/twat#readme"
Issues = "https://github.com/twardoch/twat/issues"
Source = "https://github.com/twardoch/twat"




[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "post-release"

[tool.hatch.build.hooks.vcs]
version-file = "src/twat/__version__.py"



[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]


[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/twat --cov=tests {args:tests}"
type-check = "mypy src/twat tests"
lint = ["ruff check src/twat tests", "ruff format src/twat tests"]


[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]


[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]


[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/twat tests}"
style = ["ruff check {args:.}", "ruff format {args:.}"]
fmt = ["ruff format {args:.}", "ruff check --fix {args:.}"]
all = ["style", "typing"]


[tool.black]
target-version = ["py38"]
line-length = 88
skip-string-normalization = true


[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "PLR0913",  # Too many arguments to function call
    "ISC001",   # Implicit string concatenation
]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]


[tool.coverage.run]
source_pkgs = ["twat", "tests"]
branch = true
parallel = true
omit = [
    "src/twat/__about__.py",
]


[tool.coverage.paths]
twat = ["src/twat", "*/twat/src/twat"]
tests = ["tests", "*/twat/tests"]


[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
] 